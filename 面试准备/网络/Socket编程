TCP编程
         1、TCP协议是面向连接的、可靠的、有序的、以字节流的方式发送数据，通过三次握手方式建立连接，形成传输数据的通道，在连接中进行大量数据的传输，效率会稍低
         2、Java中基于TCP协议实现网络通信的类
            客户端的Socket类
            服务器端的ServerSocket类
           
            3、Socket通信的步骤
                 ① 创建ServerSocket和Socket
                 ② 打开连接到Socket的输入/输出流
                 ③ 按照协议对Socket进行读/写操作
                 ④ 关闭输入输出流、关闭Socket
           4、服务器端：
                 ① 创建ServerSocket对象，绑定监听端口
                 ② 通过accept()方法监听客户端请求
                 ③ 连接建立后，通过输入流读取客户端发送的请求信息
                 ④ 通过输出流向客户端发送乡音信息
                 ⑤ 关闭相关资源

           5、客户端：

                 ① 创建Socket对象，指明需要连接的服务器的地址和端口号
                 ② 连接建立后，通过输出流想服务器端发送请求信息
                 ③ 通过输入流获取服务器响应的信息
                 ④ 关闭响应资源 


           6、应用多线程实现服务器与多客户端之间的通信

               ① 服务器端创建ServerSocket，循环调用accept()等待客户端连接
               ② 客户端创建一个socket并请求和服务器端连接
               ③ 服务器端接受苦读段请求，创建socket与该客户建立专线连接
               ④ 建立连接的两个socket在一个单独的线程上对话
               ⑤ 服务器端继续等待新的连接

UDP编程
       UDP协议（用户数据报协议）是无连接的、不可靠的、无序的,速度快
       进行数据传输时，首先将要传输的数据定义成数据报（Datagram），大小限制在64k，在数据报中指明数据索要达到的Socket（主机地址和端口号），然后再将数据报发送出去
       DatagramPacket类:表示数据报包
       DatagramSocket类：进行端到端通信的类
       1、服务器端实现步骤
           ① 创建DatagramSocket，指定端口号
           ② 创建DatagramPacket
           ③ 接受客户端发送的数据信息
           ④ 读取数据

       2、客户端实现步骤

           ① 定义发送信息
           ② 创建DatagramPacket，包含将要发送的信息
           ③ 创建DatagramSocket
           ④ 发送数据
