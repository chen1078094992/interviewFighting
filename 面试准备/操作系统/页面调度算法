页面调度
当主存空间已满而又需要装入新页时，页式虚拟存储管理必须按照一定的算法把已在主存的一些页调出去
选择淘汰页的工作称为页面调度
选择淘汰页的算法称为页面调度算法
页面调度算法设计不当，会出现（刚被淘汰的页面立即又要调入，并如此反复）
这种现象称为抖动或颠簸

OPT页面调度算法 当要调入新页面时，首先淘汰以后不再访问的页，然后选择据现在最长时间后再访问的页（只可模拟，不可实现）
先进先出页面调度算法（FIFO）总是淘汰最先调入主存的那一页，或者说在主存驻留时间最长的那一页（常驻的除外）
最近最少使用页面调度算法（LRU）淘汰最近一段时间较久未被访问的那一页，即那些刚被使用过的页面，可能马上还要被用到。需要维护一个页面淘汰队列，此队列存放当前在内存的所有页号，每访问一次页面就调整一次，使对列尾总是指向最近访问的页，队列头就是最近最少使用的页。
第二次机会页面替换算法（SCR）首先检查FIFO页面队列中的队首，如果它的引用位为0，那么选择淘汰该页，如果其引用位为1，将其引用位清0，并将其移到队列尾，把它看成一个新调入的页

时钟页面替换算法（Clock）
  一个页面首次装入内存，其引用位置为1
  内存中任何一个页面被访问，其引用置为1
  淘汰页面时，存储管理从指针当前指向的页面开始扫描循环队列，把所有遇到的引用位为1的页面的引用位置为0.并跳过这个页面，把所遇到的引用位为0的页面淘汰，指针推进一步
  扫描循环队列时，如果遇到所有的页面的引用位都为1，把碰到的所有页面的引用位置为0，指针回到初始位置，并淘汰该页，指针前进一步
改进后的Clock页面替换算法
  1选择最佳淘汰页面，从指针当前位置开始扫描循环队列，扫描过程中不改变引用位，把遇到的第一个引用位和修改位均为0的页面作为淘汰页
  2如果1失败，再次从原位置开始，查找引用位为0，修改位为1的页面，把遇到的第一个这个的页面淘汰，指针前进一步，并在扫描过程中把指针所经历的页面的引用位置为0
  3如果2失败，重复1到2

局部最佳页面替换算法MIN
进程在时刻t访问某个页面，如果此页面不在内存中将导致一次缺页，把此页面装入一个空闲的页框。无论发生缺页与否，算法在每一步都要考虑引用串，如果此页面在时间间隔（t，t＋r）内没有被再次引用，那么移除；否则，此页面保留在进程的驻留集中，直到被再次引用

工作集模型和工作集置换算法（WS）
是对MIN的模拟实现，滑动窗口为（t－r，t）

模拟工作集算法
缺页频率算法
